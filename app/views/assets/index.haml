- title(@query ? "Search for #{@query}" : "Assets")

- unless @assets.empty?
  = render :partial => "pagination"
  - @assets.each do |asset|
    %div.recordItem{:id => "asset_#{asset.id}"}
      %div.recordItemTitle      
  
        %h2
          = link_to asset.title, asset_url(asset.uuid)
        %h3&= asset.identifier
        - if PBCore.config["show_asset_descriptions_in_search_results"].present? and PBCore.config["show_asset_descriptions_in_search_results"] == true
          = render "asset_description", :asset => asset
        - else
          = render "asset_date", :asset => asset
        - if asset.has_thumbnail?
          = link_to img_thumb_tag(asset.thumbnail, "thumb", "80x60"), asset_url(asset.uuid), :class => "index_thumbnail"
    
        - permitted_to? :edit, asset do
          = link_to "EDIT", edit_asset_url(asset), :class => "editBtn"
        %div.moreBtn< 
          %span><= "+"
          %ul
            - permitted_to? :request, asset do
              %li<
                = link_to "REQUEST", request_mailto_link(asset)
            - permitted_to? :edit, asset do
              %li<
                = link_to "XML", asset_url(asset.uuid, :format => :xml)
            - permitted_to? :destroy, asset do
              %li<
                = link_to_remote "DELETE", :url => { :action => 'destroy', :id => asset.id }, :method => :delete, :confirm => "Are you sure you wish to delete #{asset.title}?", :html => { :class => "title2" }

            - permitted_to? :merge, :assets do
              %li<
                = check_box_tag "asset_ids[]", asset.id, false, :id => "merge_#{asset.id}"
                %label{ :for => "merge_#{asset.id}" } MERGE

        %ul.recordFormats
          - asset.instantiations.sort{ |a,b| a.summary <=> b.summary }.each do |instantiation|
            %li
              = instantiation.summary
              - if instantiation.format_location =~ /^(f|ht)tp:\/\//
                = link_to "[link]", instantiation.format_location
              - if instantiation.borrowed?
                [on loan]

      
  = render :partial => "pagination"
